" --------------------------------------------------
" Plugins
" --------------------------------------------------

call plug#begin('~/.vim/plugged')


" [Plugins for theme]
" airline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'


" [Plugins for file searching]
" Asyncsearch=<C-f>
Plug 'eugen0329/vim-esearch'
" Command-T (file search)=<Leader>t
Plug 'wincent/command-t', {
    \   'do': 'cd ruby/command-t/ext/command-t && ruby extconf.rb && make'}
" NERDTree=<Leader>n
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }


" [Plugins for handling cursor]
" Multiple cursors=<C-n>
Plug 'terryma/vim-multiple-cursors'
" Easymotion=<Leader><Leader>w
Plug 'easymotion/vim-easymotion'


" [Plugins for Git]
" More Pleasant Editing on Commit Message
Plug 'rhysd/committia.vim'
" Show git diff for Git Rebase Interactive
Plug 'hotwatermorning/auto-git-diff'
" Show diff during edit based on Git
Plug 'mhinz/vim-signify'


" [Plugins for developments]
" Show indent
Plug 'Yggdroot/indentLine'
" Tagbar(ctags should be installed)=<F8>
Plug 'majutsushi/tagbar'
" Code formatter google/vimcodefmt
Plug 'google/vim-maktaba'
Plug 'google/vim-glaive'
Plug 'google/vim-codefmt'
" LSP
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
" Sort Python imports
Plug 'fisadev/vim-isort'
" For markdown syntax highlight
Plug 'godlygeek/tabular' " Require to format table
Plug 'plasticboy/vim-markdown'
" Highlight many languages syntax
Plug 'sheerun/vim-polyglot'
" Graph undo tree
Plug 'simnalamburt/vim-mundo'
" Add shortcut `gc[c]` to comment out
Plug 'tpope/vim-commentary'
" Asynchronous Lint Engine
Plug 'dense-analysis/ale'


" [Etc]
" a universal set of defaults for Vim
Plug 'tpope/vim-sensible'

call plug#end()



" --------------------------------------------------
"  Theme
" --------------------------------------------------

hi Search cterm=reverse ctermbg=none ctermfg=Yellow
hi Visual cterm=reverse ctermbg=none ctermfg=White
hi SignColumn cterm=none ctermfg=none ctermbg=Black
hi ColorColumn ctermbg=240 ctermfg=White

" indentLine
let g:indentLine_char = 'â”†'
let g:indentLine_color_term = 243
let g:indentLine_color_gui = '#767676'

" Airline theme
let g:airline_theme='bubblegum'



" --------------------------------------------------
"  Mapping
" --------------------------------------------------

" Custom shortcut
nnoremap <C-p> :set paste<CR>a
nnoremap <C-o> :set nopaste<CR>
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-q> :q<CR>

" [prabirshrestha/vim-lsp]
inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr>    pumvisible() ? "\<Esc>a" : "\<cr>"
noremap gd :tab LspDefinition<CR>
noremap gi :tab split<CR>:tab LspImplementation<CR>
noremap gr :tab split<CR>:tab LspReferences<CR>
noremap gh :LspHover<CR>
noremap gf :LspDocumentFormat<CR>
noremap <C-e>da :LspDocumentDiagnostics<CR>
noremap <F6> :LspRename<CR>

" [scrooloose/nerdtree]
nnoremap <Leader>n :NERDTreeToggle<CR>

" [majutsushi/tagbar]
nmap <F8> :TagbarToggle<CR>

" [eugen0329/vim-esearch]
nmap <C-f> <Plug>(esearch)

" [prabirshrestha/vim-lsp]
" [google/vim-codefmt]
vmap <silent> <C-e>f :silent LspDocumentRangeFormat<CR>:silent FormatLines<CR>
nmap <silent> <C-e>f :silent LspDocumentFormat<CR>:silent FormatCode<CR>

" [simnalamburt/vim-mundo]
nnoremap <F5> :MundoToggle<CR>


" --------------------------------------------------
"  Development
" --------------------------------------------------

" setting for encoding
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,cp949,latin1
set nocp " not compatible with `vi`
set hls " hightlight search keywords
set ruler " show current cursor location
set history=1000 " history of vim command
set autoindent
set fileformat=unix " Don't use CRLF
syntax on " Enable highlighting syntax

" Set tab/indent/columns conventions
" default
set sw=4 " tab size: shifting(`<<`, `>>`)
set sts=4 " tab size: shifting(`<<`, `>>`)
set tabstop=4 " tab size
set expandtab " softtab(space)
set cc=81 " guide column
" language specific
" Ref: https://github.com/sublee/sub.sh/blob/master/vimrc
au FileType cpp        setl ts=2 sw=2 sts=2 et
au FileType javascript setl ts=2 sw=2 sts=2 et
au FileType xml        setl ts=2 sw=2 sts=2 et
au FileType yaml       setl ts=2 sw=2 sts=2 et
au FileType html       setl ts=2 sw=2 sts=2 et
au FileType css        setl ts=2 sw=2 sts=2 et
au FileType sass       setl ts=2 sw=2 sts=2 et
au Filetype rst        setl ts=3 sw=3 sts=3 et
au FileType go         setl ts=4 sw=4 sts=4 noet cc=
au FileType make       setl ts=4 sw=4 sts=4 noet
au FileType sh         setl ts=2 sw=2 sts=2 et
au FileType zsh        setl ts=2 sw=2 sts=2 et
au FileType vim        setl ts=2 sw=2 sts=2 et
au FileType terraform  setl ts=2 sw=2 sts=2 et cc=

" disable markdown folding and concealing
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_conceal = 0

" Clear my custom matches.
" NOTE: match is not cumulative. So there are 2match, 3match variants.
" https://unix.stackexchange.com/a/139499"
" Ref: https://github.com/sublee/sub.sh/blob/master/vimrc
au BufEnter * silent! call matchdelete(8901)
au BufEnter * silent! call matchdelete(8902)
au BufEnter * silent! call matchdelete(8903)

" Warn extra whitespace.
" Ref: https://github.com/sublee/sub.sh/blob/master/vimrc
hi ExtraSpace term=underline ctermbg=red
au BufEnter * call matchadd('ExtraSpace', '\s\+$\|^\s*\n\+\%$', 0, 8901)

" raw underline for wrong tabs.
" Ref: https://github.com/sublee/sub.sh/blob/master/vimrc
hi WrongTab term=underline cterm=underline
au BufEnter *
\ if &expandtab
\|  call matchadd('WrongTab', '\t\+', 0, 8902)
\|else
\|  call matchadd('WrongTab', '\(^\s*\)\@<=  \+', 0, 8902)
\|endif

" Keep maximum columns.
" Ref: https://github.com/sublee/sub.sh/blob/master/vimrc
au BufEnter *
\ if &cc
\|  call matchadd('Error', '\%>'.(&cc-1).'v.\+', 0, 8903)
\|endif

" [vim-signify]
" Set async updatetime
set updatetime=100
hi DiffAdd ctermbg=Black ctermfg=Blue
hi DiffChange ctermbg=Black ctermfg=Green
hi DiffDelete ctermbg=Black ctermfg=Red

" [dense-analysis/ale]
" Use mypy only if available on the current environment
let g:ale_python_mypy_executable = 'python -m mypy'
" Fix automatically when saving
let g:ale_fixers = {
\   'go': ['goimports'],
\   'python': ['isort']
\}
let g:ale_fix_on_save = 1

" [google/vim-codefmt]
" Set formatter for languages
autocmd FileType c,cpp,proto let b:codefmt_formatter='clang-format'
autocmd FileType vue,javascript,html,css,sass,scss,less,json let b:codefmt_formatter='prettier'
autocmd FileType python let b:codefmt_formatter='yapf'
autocmd FileType bash,sh,zsh let b:codefmt_formatter='shfmt'

" [fisadev/vim-isort]
autocmd FileType python let g:vim_isort_python_version = 'python3'

" [scrooloose/nerdtree]
let NERDTreeShowHidden=1

" [eugen0329/vim-esearch]
let g:esearch = {}
let g:esearch.regex   = 1
let g:esearch.textobj = 0
let g:esearch.case    = 'smart'
let g:esearch.prefill = ['hlsearch', 'last', 'clipboard']
let g:esearch.root_markers = ['.git', 'Makefile']
